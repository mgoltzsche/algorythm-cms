<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

	<modelVersion>4.0.0</modelVersion>

	<artifactId>basex-verticle</artifactId>
	<packaging>jar</packaging>
	<name>BaseX Verticle</name>

	<parent>
		<artifactId>cms-parent</artifactId>
		<groupId>de.algorythm.cms</groupId>
		<version>1.0.0-SNAPSHOT</version>
	</parent>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

		<!-- Set pullInDeps to true if you want any modules specified in the 'includes' 
			and 'deploys' fields in your mod.json to be automatically pulled in during 
			packaging and added inside your module. Doing this means your module won't 
			download and install those dependencies at run-time when they're first requested. -->
		<vertx.pullInDeps>true</vertx.pullInDeps>

		<!-- Set createFatJar to true if you want to create a fat executable jar 
			which contains the Vert.x binaries along with the module so it can be run 
			with java -jar <jarname> -->
		<vertx.createFatJar>true</vertx.createFatJar>

		<!--Vertx module name -->
		<module.name>${project.groupId}~${project.artifactId}~${project.version}</module.name>

		<!-- The directory where the module will be assembled - you can override 
			this on the command line with -Dmods.directory=mydir -->
		<mods.directory>target/mods</mods.directory>

		<!--Dependency versions -->
		<vertx.version>2.1.6</vertx.version>
		<vertx.testtools.version>2.0.3-final</vertx.testtools.version>
		<junit.version>4.11</junit.version>

		<!--Plugin versions -->
		<maven.compiler.plugin.version>3.0</maven.compiler.plugin.version>
		<maven.resources.plugin.version>2.6</maven.resources.plugin.version>
		<maven.clean.plugin.version>2.5</maven.clean.plugin.version>
		<maven.vertx.plugin.version>2.0.12-final</maven.vertx.plugin.version>
		<maven.surefire.plugin.version>2.14</maven.surefire.plugin.version>
		<maven.failsafe.plugin.version>2.14</maven.failsafe.plugin.version>
		<maven.surefire.report.plugin.version>2.14</maven.surefire.report.plugin.version>
		<maven.javadoc.plugin.version>2.9</maven.javadoc.plugin.version>
		<maven.dependency.plugin.version>2.7</maven.dependency.plugin.version>
	</properties>

	<dependencies>
		<!-- BaseX -->
		<dependency>
			<groupId>org.basex</groupId>
			<artifactId>basex</artifactId>
			<version>8.2.3</version>
		</dependency>
		<!-- XQJ -->
		<dependency>
			<groupId>net.xqj</groupId>
			<artifactId>basex-xqj</artifactId>
			<version>1.4.0</version>
		</dependency>
		<dependency>
			<groupId>com.xqj2</groupId>
			<artifactId>xqj2</artifactId>
			<version>0.2.0</version>
		</dependency>
		<dependency>
			<groupId>javax.xml.xquery</groupId>
			<artifactId>xqj-api</artifactId>
			<version>1.0</version>
		</dependency>
		<!-- Apache XML resolver (catalog resolver) -->
		<dependency>
			<groupId>xml-resolver</groupId>
			<artifactId>xml-resolver</artifactId>
			<version>1.2</version>
		</dependency>
		<!--Vertx provided dependencies -->
		<dependency>
			<groupId>io.vertx</groupId>
			<artifactId>vertx-core</artifactId>
			<version>${vertx.version}</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>io.vertx</groupId>
			<artifactId>vertx-platform</artifactId>
			<version>${vertx.version}</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>io.vertx</groupId>
			<artifactId>vertx-hazelcast</artifactId>
			<version>${vertx.version}</version>
			<scope>provided</scope>
		</dependency>
		<!--Test dependencies -->
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.12</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>io.vertx</groupId>
			<artifactId>testtools</artifactId>
			<version>${vertx.testtools.version}</version>
			<scope>test</scope>
		</dependency>
	</dependencies>

	<build>
		<plugins>
			<!-- The vert.x Maven plugin -->
			<plugin>
				<groupId>io.vertx</groupId>
				<artifactId>vertx-maven-plugin</artifactId>
				<version>${maven.vertx.plugin.version}</version>
				<configuration>
					<cluster>true</cluster><!-- Run in cluster mode communicating with other verticles via hazelcast -->
				</configuration>
				<!-- You can specify extra config to the plugin as required here <configuration> 
					<configFile>src/main/resources/path/to/MyVerticle.conf</configFile> <instances>1</instances> 
					<classpath>src/main/components/:src/test/components/:target/classes/:target/test-classes/</classpath> 
					</configuration> -->
				<!-- Make sure that the plugin uses the vert.x versions from this pom.xml 
					not from its own pom.xml -->
				<dependencies>
					<dependency>
						<groupId>io.vertx</groupId>
						<artifactId>vertx-platform</artifactId>
						<version>${vertx.version}</version>
					</dependency>
					<dependency>
						<groupId>io.vertx</groupId>
						<artifactId>vertx-core</artifactId>
						<version>${vertx.version}</version>
					</dependency>
					<dependency>
						<groupId>io.vertx</groupId>
						<artifactId>vertx-hazelcast</artifactId>
						<version>${vertx.version}</version>
					</dependency>
				</dependencies>
				<executions>
					<execution>
						<id>PullInDeps</id>
						<phase>prepare-package</phase>
						<goals>
							<goal>pullInDeps</goal>
						</goals>
					</execution>
					<execution>
						<id>CreateFatJar</id>
						<phase>package</phase>
						<goals>
							<goal>fatJar</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>${maven.compiler.plugin.version}</version>
				<configuration>
					<source>1.7</source>
					<target>1.7</target>
				</configuration>
			</plugin>
			<plugin>
				<artifactId>maven-resources-plugin</artifactId>
				<version>${maven.resources.plugin.version}</version>
				<executions>
					<execution>
						<id>copy-mod-to-target</id>
						<phase>process-classes</phase>
						<goals>
							<goal>copy-resources</goal>
						</goals>
						<configuration>
							<overwrite>true</overwrite>
							<outputDirectory>${mods.directory}/${module.name}</outputDirectory>
							<resources>
								<resource>
									<directory>target/classes</directory>
								</resource>
							</resources>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-dependency-plugin</artifactId>
				<version>${maven.dependency.plugin.version}</version>
				<executions>
					<execution>
						<id>copy-mod-dependencies-to-target</id>
						<phase>process-classes</phase>
						<goals>
							<goal>copy-dependencies</goal>
						</goals>
						<configuration>
							<outputDirectory>${mods.directory}/${module.name}/lib</outputDirectory>
							<includeScope>runtime</includeScope>
						</configuration>
					</execution>
					<execution>
						<id>copy-mod-dependencies-to-target-dependencies</id>
						<phase>process-classes</phase>
						<goals>
							<goal>copy-dependencies</goal>
						</goals>
						<configuration>
							<outputDirectory>target/dependencies</outputDirectory>
							<includeScope>runtime</includeScope>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>${maven.surefire.plugin.version}</version>
				<configuration>
					<includes>
						<include>**/unit/*Test*.java</include>
					</includes>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-failsafe-plugin</artifactId>
				<version>${maven.failsafe.plugin.version}</version>
				<configuration>
					<systemProperties>
						<property>
							<name>vertx.mods</name>
							<value>${mods.directory}</value>
						</property>
					</systemProperties>
					<includes>
						<include>**/integration/**/*Test*</include>
					</includes>
				</configuration>
				<executions>
					<execution>
						<goals>
							<goal>integration-test</goal>
							<goal>verify</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-report-plugin</artifactId>
				<version>${maven.surefire.report.plugin.version}</version>
				<executions>
					<execution>
						<id>generate-test-report</id>
						<phase>test</phase>
						<goals>
							<goal>report-only</goal>
						</goals>
					</execution>
					<execution>
						<id>generate-integration-test-report</id>
						<phase>integration-test</phase>
						<goals>
							<goal>failsafe-report-only</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<artifactId>maven-assembly-plugin</artifactId>
				<configuration>
					<descriptors>
						<descriptor>src/main/assembly/mod.xml</descriptor>
					</descriptors>
				</configuration>
				<executions>
					<execution>
						<id>assemble</id>
						<phase>package</phase>
						<goals>
							<goal>single</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>

	<repositories>
		<repository>
			<id>basex</id>
			<name>BaseX Maven Repository</name>
			<url>http://files.basex.org/maven</url>
		</repository>
		<repository>
			<id>xqj</id>
			<name>XQJ Maven Repository</name>
			<url>http://xqj.net/maven</url>
		</repository>
	</repositories>
</project>
